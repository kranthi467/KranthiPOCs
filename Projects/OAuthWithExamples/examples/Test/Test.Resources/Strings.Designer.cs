//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Test.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get list of music.
        /// </summary>
        public static string AudioList {
            get {
                return ResourceManager.GetString("AudioList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Back to list of providers.
        /// </summary>
        public static string BackToProviders {
            get {
                return ResourceManager.GetString("BackToProviders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Client ID for [{0}] not found. Please set value to the [oauth:{0}:id] parameter or remove [{0}] from [oauth:clients]..
        /// </summary>
        public static string ClientIdIsRequired {
            get {
                return ResourceManager.GetString("ClientIdIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cleint Secret for [{0}] not found. Please set value to the [oauth:{0}:key] parameter or remove [{0}] from [oauth:clients]..
        /// </summary>
        public static string ClientKeyIsRequired {
            get {
                return ResourceManager.GetString("ClientKeyIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get list of contacts.
        /// </summary>
        public static string ContactsList {
            get {
                return ResourceManager.GetString("ContactsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get status.
        /// </summary>
        public static string CurrentStatus {
            get {
                return ResourceManager.GetString("CurrentStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p&gt;This page displays a list of registered clients.&lt;/p&gt;
        ///&lt;p&gt;Clients registration occurs in the &lt;strong&gt;Global.asax&lt;/strong&gt; file.&lt;/p&gt;
        ///&lt;p&gt;Redirects to the login page you can found in the server code of the page.&lt;/p&gt;
        ///&lt;p&gt;The result is handled in the &lt;strong&gt;ExternalLoginResult&lt;/strong&gt; page.&lt;/p&gt;
        ///&lt;p&gt;Try to go through the authorization procedure of any service below.&lt;/p&gt;.
        /// </summary>
        public static string DefaultAbout {
            get {
                return ResourceManager.GetString("DefaultAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p&gt;If something is not working or is not working properly, please &lt;a href=&quot;https://github.com/alekseynemiro/nemiro.oauth.dll/issues&quot;&gt;report it to the developer&lt;/a&gt;.&lt;/p&gt;.
        /// </summary>
        public static string DemoFeedback {
            get {
                return ResourceManager.GetString("DemoFeedback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        public static string DemoHow {
            get {
                return ResourceManager.GetString("DemoHow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p&gt;&lt;strong&gt;Nemiro.OAuth&lt;/strong&gt; is a class library for authorization via &lt;strong&gt;OAuth&lt;/strong&gt; protocol in &lt;strong&gt;.NET Framework. (VB, C#)&lt;/strong&gt;.&lt;/p&gt;
        ///&lt;p&gt;The library is &lt;a href=&quot;https://github.com/alekseynemiro/nemiro.oauth.dll&quot;&gt;open source&lt;/a&gt; and is licensed under the &lt;strong&gt;Apache License Version 2.0&lt;/strong&gt;.&lt;/p&gt;
        ///&lt;p&gt;
        ///  To test, click on one of the icons below. Provide the required permissions for test application.&lt;br /&gt;
        ///  If everything works correctly, then after login, you will redirect to th [остаток строки не уместился]&quot;;.
        /// </summary>
        public static string DemoIntro {
            get {
                return ResourceManager.GetString("DemoIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Registration and management of applications.
        /// </summary>
        public static string DemoProvidersTable {
            get {
                return ResourceManager.GetString("DemoProvidersTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p&gt;The information in the table is current as of &lt;strong&gt;March 2015&lt;/strong&gt;.&lt;/p&gt;
        ///&lt;p&gt;The &lt;strong&gt;internal name&lt;/strong&gt; is case-insensitive.&lt;/p&gt;
        ///&lt;p&gt;If the provider supports the &lt;strong&gt;localhost&lt;/strong&gt;, then allowed to use the &lt;strong&gt;HTTP&lt;/strong&gt; protocol for &lt;strong&gt;localhost&lt;/strong&gt;.
        ///&lt;strong&gt;HTTP&lt;/strong&gt; supports field is only for external addresses.&lt;/p&gt;
        ///.
        /// </summary>
        public static string DemoProviderTableInfo {
            get {
                return ResourceManager.GetString("DemoProviderTableInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;h2&gt;Is it safe?&lt;/h2&gt;
        ///&lt;p&gt;Yes safely.&lt;/p&gt;
        ///&lt;p&gt;
        ///  After authentication and authorization, the provider server sends special authorization code to the callback page.
        ///  This code is a one-off and has a limited duration.
        ///&lt;/p&gt;
        ///&lt;p&gt;The &lt;strong&gt;Nemiro.OAuth&lt;/strong&gt; library uses the authorization code for convertion to an &lt;strong&gt;access token&lt;/strong&gt;.&lt;/p&gt;
        ///&lt;p&gt;The access token is stored in the server &lt;strong&gt;session&lt;/strong&gt;.&lt;/p&gt;
        ///&lt;p&gt;The access token is used to work with &lt;strong&gt;API&lt;/strong&gt; and does not appear  [остаток строки не уместился]&quot;;.
        /// </summary>
        public static string DemoSecurity {
            get {
                return ResourceManager.GetString("DemoSecurity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;h2&gt;Technical information&lt;/h2&gt;
        ///&lt;p&gt;Latest release of the &lt;strong&gt;Nemiro.OAuth&lt;/strong&gt;:&lt;/p&gt;
        ///&lt;h3&gt;v{1}&lt;/h3&gt;
        ///&lt;p&gt;Version of the &lt;strong&gt;Nemiro.OAuth&lt;/strong&gt; on the current server:&lt;/p&gt;
        ///&lt;h3&gt;v{0}&lt;/h3&gt;
        ///&lt;p&gt;NOTE: The version number of the library on the server may differ from the number of the latest release.&lt;/p&gt;
        ///&lt;ul&gt;&lt;li&gt;&lt;em&gt;The first number - is the major version number. Now it is 1. In the near future the number change is not planned;&lt;/em&gt;&lt;/li&gt;
        ///&lt;li&gt;&lt;em&gt;The second number - is the minor version number. Is incr [остаток строки не уместился]&quot;;.
        /// </summary>
        public static string DemoTechInfo {
            get {
                return ResourceManager.GetString("DemoTechInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Nemiro.OAuth demo site.
        /// </summary>
        public static string DemoTitle {
            get {
                return ResourceManager.GetString("DemoTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;h2&gt;Additional resources&lt;/h2&gt;
        ///&lt;p&gt;
        ///  Source code:&lt;br /&gt;
        ///  &lt;a href=&quot;https://github.com/alekseynemiro/nemiro.oauth.dll&quot;&gt;https://github.com/alekseynemiro/nemiro.oauth.dll&lt;/a&gt;
        ///&lt;/p&gt;
        ///&lt;p&gt;
        ///Documentation:&lt;br /&gt;
        ///  &lt;a href=&quot;http://oauth.nemiro.net/&quot;&gt;http://oauth.nemiro.net/&lt;/a&gt;
        ///&lt;/p&gt;
        ///&lt;p&gt;
        ///Ready OAuth login forms for Windows Forms projects:&lt;br /&gt;
        ///&lt;a href=&quot;https://github.com/alekseynemiro/Nemiro.OAuth.LoginForms&quot;&gt;https://github.com/alekseynemiro/Nemiro.OAuth.LoginForms&lt;/a&gt;
        ///&lt;/p&gt;
        ///&lt;p&gt;
        ///Article: «Users Authorizati [остаток строки не уместился]&quot;;.
        /// </summary>
        public static string DemoUsefulLinks {
            get {
                return ResourceManager.GetString("DemoUsefulLinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download.
        /// </summary>
        public static string Download {
            get {
                return ResourceManager.GetString("Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get list of friends.
        /// </summary>
        public static string FriendsList {
            get {
                return ResourceManager.GetString("FriendsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get list of groups.
        /// </summary>
        public static string GroupsList {
            get {
                return ResourceManager.GetString("GroupsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на HTTP&lt;br /&gt;supports.
        /// </summary>
        public static string HTTPSupports {
            get {
                return ResourceManager.GetString("HTTPSupports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p&gt;This page displays a list of registered clients.&lt;/p&gt;
        ///&lt;p&gt;Clients registration occurs in the &lt;strong&gt;Global.asax&lt;/strong&gt; file.&lt;/p&gt;
        ///&lt;p&gt;Code redirects to the login page can be found in the &lt;strong&gt;ExternalLogin&lt;/strong&gt; method  of the &lt;strong&gt;HomeController&lt;/strong&gt;.&lt;/p&gt;
        ///&lt;p&gt;The result is handled in the &lt;strong&gt;ExternalLoginResult&lt;/strong&gt; method.&lt;/p&gt;
        ///&lt;p&gt;Try to go through the authorization procedure of any service below.&lt;/p&gt;.
        /// </summary>
        public static string IndexAbout {
            get {
                return ResourceManager.GetString("IndexAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Install via &lt;a href=&quot;https://www.nuget.org/packages/Nemiro.OAuth/&quot;&gt;NuGet&lt;/a&gt;.
        /// </summary>
        public static string InstallViaNuGet {
            get {
                return ResourceManager.GetString("InstallViaNuGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get list of interests.
        /// </summary>
        public static string InterestsList {
            get {
                return ResourceManager.GetString("InterestsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Internal name.
        /// </summary>
        public static string InternalName {
            get {
                return ResourceManager.GetString("InternalName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get list of likes.
        /// </summary>
        public static string LikesList {
            get {
                return ResourceManager.GetString("LikesList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на localhost&lt;br /&gt;supports.
        /// </summary>
        public static string LocalhostSupports {
            get {
                return ResourceManager.GetString("LocalhostSupports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Multiple Url&lt;br /&gt;supports.
        /// </summary>
        public static string MultipleUrlSupports {
            get {
                return ResourceManager.GetString("MultipleUrlSupports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;h1 style=&quot;color:red;text-align:center;&quot;&gt;This site works correctly only on the demo-oauth.nemiro.net!&lt;/h1&gt;.
        /// </summary>
        public static string NoForLocalhost {
            get {
                return ResourceManager.GetString("NoForLocalhost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Note.
        /// </summary>
        public static string Note {
            get {
                return ResourceManager.GetString("Note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get list of photo albums.
        /// </summary>
        public static string Photoalbums {
            get {
                return ResourceManager.GetString("Photoalbums", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All applications are configured on the port &lt;strong&gt;{0}&lt;/strong&gt;.&lt;br /&gt;If you have another port, the results will not shown.&lt;br /&gt;Configure the port settings for this web project (Project =&amp;gt; Properties =&amp;gt; Web =&amp;gt; Specified port), or use your own configuration applications (on sites of providers)..
        /// </summary>
        public static string Port59962 {
            get {
                return ResourceManager.GetString("Port59962", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Provider.
        /// </summary>
        public static string Provider {
            get {
                return ResourceManager.GetString("Provider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Public Key for [{0}] not found. Please set value to the [oauth:{0}:publicKey] parameter or remove [{0}] from [oauth:clients]..
        /// </summary>
        public static string PublicKeyIsRequired {
            get {
                return ResourceManager.GetString("PublicKeyIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refresh token.
        /// </summary>
        public static string RefreshToken {
            get {
                return ResourceManager.GetString("RefreshToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Revoke token.
        /// </summary>
        public static string RevokeToken {
            get {
                return ResourceManager.GetString("RevokeToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на See also &lt;a href=&quot;http://demo-oauth.nemiro.net/&quot;&gt;http://demo-oauth.nemiro.net/&lt;/a&gt;..
        /// </summary>
        public static string SeeAlsoDemo {
            get {
                return ResourceManager.GetString("SeeAlsoDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The session ended. Please authorize in again to create a new session..
        /// </summary>
        public static string SessionIsDead {
            get {
                return ResourceManager.GetString("SessionIsDead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show token.
        /// </summary>
        public static string ShowToken {
            get {
                return ResourceManager.GetString("ShowToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get list of twits.
        /// </summary>
        public static string Twits {
            get {
                return ResourceManager.GetString("Twits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get list of followers.
        /// </summary>
        public static string TwitterFollowersList {
            get {
                return ResourceManager.GetString("TwitterFollowersList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get list of news.
        /// </summary>
        public static string UpdatesList {
            get {
                return ResourceManager.GetString("UpdatesList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use JavaScript links to prevent them from indexing..
        /// </summary>
        public static string UseJavaScriptLinks {
            get {
                return ResourceManager.GetString("UseJavaScriptLinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User info.
        /// </summary>
        public static string UserInfo {
            get {
                return ResourceManager.GetString("UserInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User Info.
        /// </summary>
        public static string UserInfoTitle {
            get {
                return ResourceManager.GetString("UserInfoTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning.
        /// </summary>
        public static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get files list of Yandex.Disk.
        /// </summary>
        public static string YandexDiskContent {
            get {
                return ResourceManager.GetString("YandexDiskContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Summary info of Yandex.Disk.
        /// </summary>
        public static string YandexDiskSummary {
            get {
                return ResourceManager.GetString("YandexDiskSummary", resourceCulture);
            }
        }
    }
}
